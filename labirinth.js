// Sergey Belorusets, 2018
//

/**
 * Лабиринт - это матрица ячеек M x N.
 * Между соседними по вертикали или горизонтили ячейками может быть разрешен или запрещен переход.
 * Если из одной ячейки можно путем последовательных переходов перейти в другую ячейку, то значит между этими двумя ячейками есть путь.
 * Цель: сгенерировать Лабиринт, в котором был бы один и только один путь между любыми двумя ячейками,
 * в котором нет возвратов (возврат - пара путей между двумя ячейками, которые отличаются только направлениями).
 * 
 * Основная идея реализации:
 * Лабиринт описывается ненаправленным графом, в котором ячейки лабиринта - это вершины графа,
 * а переходы (заперщенные и разрешенные) - это ребра.
 * В этом случае цель достигается, когда сгенерирован ацикличный связный граф.
 * 1. создаеть граф лабиринта, в котором все переходы разрешены;
 * 2. запретить случайный переход;3. сделать обход графа:
 * 3.1. перейти в следующую вершину графа;
 * 3.2. если вершина уже есть в списке посещенных вершин, значит граф цикличный;
 * 3.3. добавить вершину, в список посещенных вершин;
 * 3.4. выбрать следующий разрешенный переход из этой вершины;
 * 3.5. если есть следующая разрешенный переход, то перейти в 3.1;
 * 3.6. если разрешенных переходов нет, то вернуться к предыдущей вершине;
 * 3.7. если есть предыдущая вершина, то перейти к 3.4;
 * 3.8. если предыдущих вершин нет, то обход завершен;
 * 3.9. если количество посещенных вершин равно количеству вершин графа, то граф связный;
 **/

function test() {
	let test_elem = document.getElementById("test");
	test_elem.innerText = "Script is loaded";
}